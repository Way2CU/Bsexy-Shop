<?php

/**
 * Bsexy - Support Module
 *
 * This module provides some basic customizations for Bsexy site. Aside
 * from customizations it also provides options for importing shop items to system from CSV
 * sources generated by the Google Documents.
 *
 * Author: Mladen Mijatov
 */
use Core\Module;
use Core\Events;

use \Modules\Shop\Transaction as Transaction;


class bsexy extends Module {
	private static $_instance;
	const API = '';

	/**
	 * Constructor
	 */
	protected function __construct() {
		global $section, $action;

		parent::__construct(__FILE__);
	}

	/**
	 * Public function that creates a single instance
	 */
	public static function getInstance() {
		if (!isset(self::$_instance))
			self::$_instance = new self();

		return self::$_instance;
	}

	/**
	 * Transfers control to module functions
	 *
	 * @param array $params
	 * @param array $children
	 */
	public function transferControl($params = array(), $children = array()) {
	}

	/**
	 * Event triggered upon module initialization
	 */
	public function onInit() {
	}

	/**
	 * Event triggered upon module deinitialization
	 */
	public function onDisable() {
	}

	/**
	 * Handle transaction status change.
	 *
	 * @param object transaction
	 */
	public function handle_item_change($transaction) {
		global $language;

		// get managers
		$buyer_manager = ShopBuyersManager::getInstance();
		$address_manager = ShopDeliveryAddressManager::getInstance();
		$transaction_items_manager = ShopTransactionItemsManager::getInstance();
		$item_manager = ShopItemManager::getInstance();

		// get transaction data
		$buyer = Transaction::get_buyer($transaction);
		$address = Transaction::get_address($transaction);
		$transaction_items = $transaction_items_manager->getItems(
			$transaction_items_manager->getFieldNames(),
			array('transaction' => $transaction->id)
		);

		$date_time = date('Y-m-d', strtotime($transaction->delivery_type));

		// prepare data
		$title = $buyer->first_name.' '.$buyer->last_name.' - '.$transaction->uid;

		if ($transaction->delivery_type == 'pickup') {
			$location = '';
			$color = 9;

		} else {
			$location = $address->street.' '.$address->street2.', '.$address->zip.' '.$address->city.', '.$address->country;
			$color = 10;
		}

		$id_list = array();
		$name_by_id = array();
		$description = '';

		if (count($transaction_items) > 0) {
			foreach ($transaction_items as $item)
				$id_list[] = $item->item;

			$items = $item_manager->getItems(array('id', 'name'), array('id' => $id_list));
			foreach ($items as $item)
				$name_by_id[$item->id] = $item->name;

			foreach ($transaction_items as $item)
				$description .= $name_by_id[$item->item][$language].' - '.$item->amount."\n";
		}

		$post_data = array(
				'start'       => $date_time,
				'end'         => $date_time,
				'title'       => $title,
				'description' => $description,
				'color'       => $color
			);
		$post_data = json_encode($post_data);

		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, self::API);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_HTTPGET, true);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
		$response = curl_exec($ch);
	}
}

?>
